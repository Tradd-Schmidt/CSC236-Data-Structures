/* Course: CSC 236 Data Structures
   Name: Tradd Schmidt & Tobi Adejumo
   Assignment T17: A program to roll dice

   Purpose: This assignment allows a user to input a certain number of rolls and the program prints out the resulting rolls
*/
#include "dice.h"
#include <iostream>
#include <ctime>
#include <cmath>
#include <cstdlib>

using namespace std;

int main()
{
    const int start=1;
    string star = "*";

    static int storeroll[13]; // this is an array declaration for an array of 12 integers
    storeroll[0]=0; // this will remain unused, but we can initialize it.

    int loopcount =1;

    Dice cube;              // make a six-sided die
    Dice cube_2;            // make a second six-sided die
    int rolls;              // an variable to store how many times the user wants to roll

    cout << "How many times would you like to roll the dice?";
    cin >> rolls;
    cout << "\n";



    cube.Roll();  //For debugging purposes, the same number will be generated by EVERY SINGLE first roll.
    //So, unless you want the same number for each first roll, we must throw away the first roll.
    //which we do by ignoring the first roll and not storing it or printing it out.

    cout << "This loop displays the total resulting rolls after "<< rolls <<" rolls of two 6-sided dice:\n" << endl;
    for (loopcount=start; loopcount<=rolls; loopcount++)
    {
        storeroll[cube.Roll() + cube_2.Roll()]++; // put the roll into the array
    }
    for (int l = 2; l<= 12; l++)
    {   cout << l << "  :";
        if (storeroll[l] > 80)      // if the current number was rolled more than 80 times
        {
            cout << "!!!!!!!! \n";
            cout << "    (Too many rolls to display) \n";
        }
        else
        {
        for (int k = storeroll[l]; k>= 1; k--)      // This prints out an asterisk for the number of times the number was rolled
             cout <<"*";
             cout << "\n    " << storeroll[l] << "\n";
        }
    }
    cout << "\nRolled the six-sided dice " << cube.NumRolls()-1 << " times.\n" << endl;

    return 0;
}
